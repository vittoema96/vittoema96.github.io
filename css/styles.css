/* ==========================================================================
      Root Variables
   ========================================================================== */

:root {
    --loader-display: flex; /* app.js' HIDE_LOADER=true sets it to 'none'  */

    /* Should not change, regardless of theme */
    --success-color: #0088ff;
    --failure-color: #dc143c;
    --overlay-color: rgba(0, 0, 0, .5);
    --delete-button-color: #ff4d4d;
    --special-text-color: #ffdb58;

    /* Control loader durations */
    --turn-on-delay: .1s;
    --turn-on-duration: 1s;
    --typewrite-duration: 1s; /* n% is dedicated to show the '> ' *% */
}

/*************************
 *    VANILLA ELEMENTS   *
 *************************/

html {
    height: 100%;
    overflow: hidden;
}
body {
    margin: 0;
    height: 100dvh;
    display: flex;
    flex-direction: column;
    color: var(--primary-color);
    background-color: var(--secondary-color);
    font-family: 'Share Tech Mono', 'Roboto Mono', 'Courier New', monospace;
    text-shadow: 0 0 5px var(--animation-glow-color), 0 0 10px var(--animation-glow-color);
}
header {
    text-align: center; /* text centered in block */
    align-items: center; /* block centered in his space */
    display: flex; /* elements stack horizontally */
}
hr {
    border: none;
    border-top: var(--border-primary-thick);
    width: 100%;
}
footer {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-evenly;
}
section {
    display: flex;
    flex-direction: column;
    gap: .5rem;
}

.h1,.h2,.h3,.h4,.h5 {
    text-align: center;
}
/* TODO is this useful in some way? not currently used */
.h--variable {
    font-size: clamp(1.5rem, 1.9rem, 2.1rem);
}
.h1 { font-size: 2rem; }
.h1--margin-top { margin-top: 1rem; }
.h2 { font-size: 1.5rem; }
.h3 { font-size: 1.3rem; }
.h4 { font-size: 1rem; }
.h5 { font-size: 0.7rem; }

input, textarea, select, button {
    font-family: inherit;
    text-shadow: inherit;
    background-color: var(--button-background);
    cursor: pointer;
    color: var(--primary-color);
    border: var(--border-primary-thin);
    border-radius: 5px;
}
input[type=number] {
    -moz-appearance: textfield;
    font-size: 1rem;
    text-align: center;
    padding: .3rem;
}
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
    opacity: 1;
    -webkit-appearance: none;
}
input[type="checkbox"] {
    appearance: none;
    width: 1.5rem;
    height: 1.5rem;
    border: 0;
    background-color: var(--button-background);

    /* TODO check default */
    background-size: contain;
    background-repeat: no-repeat;
}
input[type="checkbox"]:checked { background-color: var(--primary-color); }

button {
    padding: 0.8rem;
    font-size: 1rem;
    text-align: center;
    font-weight: bold;
    transition:
            color 0.3s ease,
            background-color 0.3s ease,
            font-size 0.3s ease,
            font-weight 0.3s ease;
}button:disabled {
    opacity: 0.5;
}

select {
    padding: 0.5rem;
    width: 80%;
    max-width: 300px;
}


/**********************
 *   Generic classes  *
 **********************/

.hidden { display: none !important; /* override any other 'display' */ }
.row {
    display: flex;
    align-items: center;
    flex-flow: row;
    gap: .5rem;
}
.row--spaced {
    justify-content: space-evenly;
}
.row--wrap {
    flex-wrap: wrap;
}
/* All items take the same space */
.l-distributed > * { flex: 1; }
/* Squished the items to the center */
.l-centered { justify-content: center; }
.l-spaceBetween { justify-content: space-between; }
/* Can be used either alone or in conjunction with l-distributed */
.l-lastSmall > :not(:last-child) { flex: 2 }

/**********************
 *     Main Header    *
 **********************/
#c-headerStats > :not(:last-child){ border-bottom: var(--border-primary-thick); }

.icon-text-pair {
    padding: 2px;
    display: flex;
}
.icon-text-pair .themed-svg { width: 15px; height: 15px; }
.icon-text-pair :not(.themed-svg) {
    flex: 1;
    text-align: center;
    padding: 0 8px;
}

/*********************
 *   Main Container  *
 *********************/
#main-container {
    width: 100%;
    overflow-y: auto;
    margin: 0 auto;
    padding: 1rem;
    border: 4px solid var(--primary-color);
    border-radius: 10px;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    align-items: stretch;
    box-sizing: border-box;
}

/**************
 *   Tabs   *
 **************/
.navigator {
    display: flex;
    padding: 0.5rem 1rem 0;
    justify-content: space-between;
    align-items: center;
    flex-direction: row;
    flex-wrap: nowrap;
    gap: .5rem;
}
.tabContent {
    gap: 1rem;
}

.tab-button {
    border-bottom: 0;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    padding: .2rem .3rem;
    min-width: 2.5rem;

    flex: 1;
    box-sizing: border-box;
}
.tab-button.active {
    background-color: var(--primary-color);
    color: var(--secondary-color);
}
.mini-tab-button {
    min-width: 10px;
    flex: 0 0 auto;
    display: flex;
    justify-content: center;
    align-items: center;
}

.subTab-button {
    /* Override button behaviour */
    color: var(--primary-color-very-translucent);
    background-color: transparent;
    border: none;
    border-radius: 0;
    font-size: 0.7rem;
    padding: .25rem 0;

    font-weight: normal;
    box-sizing: border-box;
}
.subTab-button.active + .subTab-button,
.subTab-button:has(+ .subTab-button.active) {
    color: var(--primary-color-translucent);
    font-size: .8rem;
}
.subTab-button.active {
    font-size: 1rem;
    font-weight: bolder;
    color: var(--primary-color);
    border-top: var(--border-primary-thick);
    border-bottom: var(--border-primary-thick);
}


/*****************
 *  STAT SCREEN  *
 *****************/


#c-special {
    container-type: inline-size;
    container-name: container-special;
    display: flex;
    flex-wrap: wrap;

    justify-content: space-around;
    /*justify-content: space-between;
    place-items: center;*/
    gap: .5rem;
}
/************************
 *  SPECIFIC TO MOBILE  *
 ************************/
@media (min-width: 768px) {
  #c-special {
    flex-wrap: nowrap;
  }
  .special {
    flex-basis: 0;
  }
  .special__name {
      font-size: calc(100cqw / (18 * .5)) !important; /* 100% width - 12 letters of size .5em */
  }
}

.special::before,
.sub-special::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;

    /* Use the SVG as a mask */
    background-color: var(--primary-color);
    -webkit-mask-image: url('../img/svg/gear.svg');
    mask-image: url('../img/svg/gear.svg');
    -webkit-mask-size: contain;
    mask-size: contain;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
}

.special, .sub-special {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    aspect-ratio: 1;
}
.special {
    position: relative;
    flex-basis: calc(25% - .5rem);
    container-type: inline-size;

    min-width: 60px;
}
.special__name {
    margin-top: 12cqw;
    font-size: calc(100cqw / (14 * .5)); /* 100% width - 14 letters of size .5em */
    color: var(--special-text-color);
}
.special__value {
    font-size: 24cqw;
}
#c-special .sub-special {
    --image-url: url("../img/svg/gear-full.svg");
    background-color: var(--secondary-color);

    width: 50%;
    min-width: 30px;

    position: absolute;
    bottom: -5px;
    right: -10px;
}

.derived-stat {
    border: var(--border-primary-thick); /* FIXME use class */
    display: flex;
    flex-direction: column;
    border-radius: 5px;
    flex: 1;
    align-self: stretch;
    text-align: center;
    font-size: clamp(10px, 3vw, 32px);
}
.derived-stat > * {
    padding: .5rem;
    align-content: center;
}
.derived-stat > :first-child {
    flex: 1;
    background-color: var(--button-background);
    border-bottom: var(--border-primary-thin);
}

.skill {
    display: flex;
    align-items: center;
    padding: .5rem 1rem;
    border: var(--border-primary-thick);   /* FIXME use class */
    border-radius: 5px;
    font-size: .7rem;
}
.skill > :not(:first-child) {
    text-align: center;
}
.skill > :nth-child(1), .skill > :nth-child(2) {
    flex: 3;
}
.skill > :nth-child(3) {
    flex: 1;
}


/***************
 *  INV SCREEN *
 ***************/
.itemlist {
    gap: .2rem;
}
.itemlist-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
}
.button-addItem {
    font-size: 2rem;
    font-weight: bolder;
    padding: 0 0.5rem;
}
.button-attack {
    background-color: var(--primary-color);
    border: none;
    height: 2.5rem;
    width: 2.5rem;
}

/**********************
 *  CARD DEFINITIONS  *
 **********************/

.card-carousel {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scroll-padding: 0 15%; /* TODO somethings wrong!! - Ensures snapped items are centered */
    -ms-overflow-style: none;
    scrollbar-width: none;
}
.card-carousel::-webkit-scrollbar { display: none; }
.card-carousel::before,
.card-carousel::after {
    content: '';
    flex: 0 0 0.5rem;
}
.card-carousel > .card {
    scroll-snap-align: center;
    flex: 0 0 85%;
}
.card {
    width: 100%;
    max-width: 300px;
    border: var(--border-primary-thick);
    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.1);
    position: relative;
}
.card-header {
    padding: 10px;
    align-items: start;
    background-color: var(--primary-color);
    color: var(--secondary-color);
    text-align: center;
}


.card-quantity {
    font-size: .8rem;
}
.right-header-item {
    display: flex;
    flex-direction: column;
    font-size: 0.6rem;
}
.card-controls {
    margin: 5px;
    justify-content: space-around;
    align-items: center;
    display: flex;
}
.description-toggle-button {
    padding: 0.5rem;
    flex: auto;
}
.description-container {
    overflow: hidden;
    max-height: 0;
    transition: max-height 0.3s ease-out;
}
.description-container.expanded {
    max-height: 500px;
    transition: max-height 0.5s ease-in;
}
.description {
    padding: 10px;
    text-align: justify;
    font-size: 0.8rem;
    line-height: 1.5;
}
/*** Card Overlay ***/
.card-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--overlay-color);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 10;

    gap: 1rem;
}
.card-overlay button {
    padding: 1rem;
    font-size: 2rem;
    justify-content: center;
    align-items: center;
    aspect-ratio: 1 / 1;
}
.card-overlay button img {
    width: 2.5rem;
}

.delete-button { background-color: var(--delete-button-color); } /* TODO same background as others? maybe use red for the icon */



/***************
 *  Ammo Cards *
 ***************/
#ammo-cards {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    font-size: .8rem;
}
.ammo-card {
    position: relative;
    margin: 5px;
    border: var(--border-primary-thick);
    border-radius: 5px;
}
.ammo-card span { padding: 10px; }
.ammo-card .card-overlay {
    justify-content: end;
}
.ammo-card .card-overlay button {
    font-size: 1rem;
    padding: .2rem 1rem;
    aspect-ratio: auto;
    margin: 0 0.5rem;
}
.ammo-card .card-overlay button img {
    width: 1rem;
}

.ammo-card-name { flex: 6; }
.ammo-quantity {
    flex : 1;
    border-right: var(--border-primary-thick);
}



/**************
 *   Buttons  *
 **************/
.popup__button-confirm {
    background-color: var(--primary-color);
    color: var(--secondary-color);
}
.popup__button-close {
    background-color: var(--cancel-btn-background); /* TODO use different color? */
    color: var(--primary-color);
}





/*************
 *    Dice   *
 *************/

.dice {
    color: var(--primary-color);
    background-color: var(--button-background);
    transition: background-color 0.3s ease;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1.5rem;
    aspect-ratio: 1 / 1;
}
.d6-dice.active,
.d20-dice.active {
    background-color: var(--primary-color);
    color: var(--secondary-color);
}
.d20-dice {
    min-width: 3rem;
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
}
.d20-dice:not(:nth-child(-n + 2)) { transform: scale(.8); } /* All except first 2 */
.d20-dice.roll-crit { background-color: var(--success-color); }
.d20-dice.roll-complication { background-color: var(--failure-color); }

.d6-dice {
    background-size: 80%; /* TODO check if its needed */
    background-position: center;
    background-repeat: no-repeat;

    width: 2.5rem;
    height: 2.5rem;
}
.d6-face-damage1 { background-image: url('../img/svg/damage1.svg'); }
.d6-face-damage2 { background-image: url('../img/svg/damage2.svg'); }
.d6-face-effect { background-image: url('../img/svg/vaultboy.svg'); }
.d6-face-blank { background-image: none; }








/*** Custom templates - common ***/
.stats {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
    font-size: 0.9em;
    margin: 0;
}
.card-stat div {
    text-align: center;
    border: 1px solid var(--primary-color);
    padding: 5px;
    width: 60px;
    font-size: 0.6rem;
    font-weight: bold;
}
.card-stat div:first-child {
    background-color: var(--primary-color);
    color: var(--secondary-color);
}

.js-cardWeapon-image {
    margin: 10px;
    align-self: stretch;
    flex-grow: 1;
}
.js-cardAid-image {
    min-width: 2.5rem;
    min-height: 2.5rem;
    margin: 5px;
}


/***********
 *  OTHER  *
 ***********/

.tags-container {
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
    gap: .5rem;
}
.tag {
    background-color: var(--primary-color);
    color: var(--secondary-color);
    border-radius: 4px;
    padding: 0.3rem;
    font-size: .8rem;
}
.tag-empty {
    background-color: var(--button-background) !important;
    color: var(--primary-color) !important;
    border: var(--border-primary-thin) !important;
}

/****************
 *  MAP SCREEN  *
 ****************/

section#map-tabContent {
    overflow: hidden;
    flex-flow: column;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
    box-sizing: border-box;
}

section#map-tabContent:not(.hidden) { display: flex; }

#map-container {
    height: 100%;
    width: 100%;
}

/*********************
 *  LOADING OVERLAY  *
 *********************/
#loader {
    display: var(--loader-display); /* Used to 'toggle' the loader animation for debugging */
    position: fixed;
    inset: 0;
    background: var(--secondary-color);
    z-index: 9998; /* One below body::before */
    align-items: center;
    justify-content: center;
    transition: opacity 0.75s ease-out;

    animation: fadeOut 0.5s forwards;
    animation-delay: calc(
            var(--turn-on-delay) + var(--turn-on-duration) +
            4 * var(--typewrite-duration)
    );
    font-size: calc(min(2.5vw, 2vh))
}
#loader pre {
    font-family: "Fira Code", monospace; /* To make loader render properly on (my) Android */
    margin: 0; /* No margin, pre presents stuff as is. Use margin on pre children (like spans in loader) */
    white-space: pre-wrap; /* TODO do we need this (or is there a better alternative)? Test it and check other values) */
}
/* Loader entries */
#loader span {
    opacity: 0;
    display: block;
    overflow: hidden;
    margin: 1rem;
}
/* PIP-BOY 3000 text */
#loader .turn-on-animation {
    transform-origin: center;
    animation: crt-turn-on var(--turn-on-duration) forwards;
    animation-delay: var(--turn-on-delay);
    align-self: center;
    margin: 2rem 0;
}
/* Code entries */
#loader .boot-text {
    white-space: nowrap;
    animation: typewriter var(--typewrite-duration) steps(40, end) forwards;
    animation-delay: calc(
            var(--turn-on-delay) + var(--turn-on-duration) +
            var(--line-idx) * var(--typewrite-duration)
    );
}
#loader .boot-text:nth-child(2) { --line-idx: 0; }
#loader .boot-text:nth-child(3) { --line-idx: 1; }
#loader .boot-text:nth-child(4) { --line-idx: 2; }
#loader .boot-text:nth-child(5) { --line-idx: 3; }

/****************
 *  ANIMATIONS  *
 ****************/

@keyframes crt-turn-on {
    0% {
        transform: scale(1.5, 0.005);
        filter: brightness(6);
        opacity: 0;
    }
    20% {
        transform: scale(1, 0.005);
        filter: brightness(4.2);
        opacity: 1;
    }
    40% {
        transform: scale(1, 1);
        filter: brightness(2.8);
    }
    60% { filter: brightness(1.8); }
    80% { filter: brightness(1.2); }
    100% {
        transform: scale(1, 1);
        filter: brightness(1);
        opacity: 1;
    }
}
@keyframes crt-turn-off {
    0% {
        transform: scale(1, 1);
        filter: brightness(1);
        opacity: 1;
    }
    20% { filter: brightness(1.2); }
    40% { filter: brightness(1.8); }
    60% {
        transform: scale(1, 1);
        filter: brightness(2.8);
    }
    80% {
        transform: scale(1, 0.005);
        filter: brightness(4.2);
        opacity: 1;
    }
    100% {
        transform: scale(1.5, 0.005);
        filter: brightness(6);
        opacity: 0;
    }
}

/* Animation to make the scan lines flicker */
@keyframes flicker {
    0% { opacity: 0.27861; }
    5% { opacity: 0.34769; }
    10% { opacity: 0.23604; }
    15% { opacity: 0.90626; }
    20% { opacity: 0.18128; }
    25% { opacity: 0.83891; }
    30% { opacity: 0.65583; }
    35% { opacity: 0.67807; }
    40% { opacity: 0.26559; }
    45% { opacity: 0.84693; }
    50% { opacity: 0.96019; }
    55% { opacity: 0.08594; }
    60% { opacity: 0.20313; }
    65% { opacity: 0.71988; }
    70% { opacity: 0.53455; }
    75% { opacity: 0.37288; }
    80% { opacity: 0.71428; }
    85% { opacity: 0.70428; }
    90% { opacity: 0.7003; }
    95% { opacity: 0.36108; }
    100% { opacity: 0.24387; }
}

/* Fade out to opacity:0 and visibility:hidden (which forwards clicks) */
@keyframes fadeOut {
    to {
        opacity: 0;
        visibility: hidden;
    }
}

/* Grows element width so it looks like strings are typed in */
@keyframes typewriter {
    0% {
        width: 1ch;
        opacity: 1;
    }
    50% {
        width: 1ch;
        opacity: 1;
    }
    100% {
        width: 100%;
        opacity: 1;
    }
}








@media (max-width: 768px) {

    /* TODO currently unused, could be used on skills */
    .skill-stat { text-overflow: ellipsis; }
}


/***************
 *    THEMES   *
 ***************/

/* FALLOUT 3 THEME */
body.theme-fallout-3 {
    --primary-color: #afff03;
    --secondary-color: #0f3003;
    --button-background: #1a5205;

    --tab-hover: #338006;
    --button-hover: #7cba02;
    --cancel-btn-background: #4a5568;

    --animation-glow-color: rgba(45, 255, 113, 0.75);
}
/* FALLOUT New Vegas Theme */
body.theme-fallout-new-vegas {
    --primary-color: #ffbe0b;
    --secondary-color: #2a1d00;
    --button-background: #4d3d1a;

    --tab-hover: #785d21;
    --button-hover: #ffd466;
    --cancel-btn-background: #615849;
    --animation-glow-color: rgba(255, 190, 11, 0.7);
}
/* Just body's derived variables, body attributes are set below */
body {
    --primary-color-translucent: rgba(from var(--primary-color) r g b / 0.7);
    --primary-color-very-translucent: rgba(from var(--primary-color) r g b / 0.25);
    --secondary-color-translucent: rgba(from var(--secondary-color) r g b / 0.25);

    --border-primary-thick: 2px solid var(--primary-color);
    --border-primary-thin: 1px solid var(--primary-color);
    --border-secondary-thick: 2px solid var(--secondary-color);
    --border-secondary-thin: 1px solid var(--secondary-color);
}
/* Applies the scan lines on top of the whole body */
body::before {
    content: " ";
    display: block; /* Necessary to make the ::before exist and behave like a block */
    position: fixed; /* Use fixed to cover the viewport */
    inset: 0; /* same as top/left/etc: 0; */

    z-index: 9999; /* It's the topmost element */
    pointer-events: none; /* Allows clicks to go through to elements underneath */
    animation: flicker 0.15s infinite; /* Makes the scan lines flicker */

    /* Actual scan line effect */
    background: linear-gradient(
            rgba(18, 16, 16, 0) 50%,
            rgba(0, 0, 0, 0.25) 50%
    ), linear-gradient(
            90deg,
            rgba(255, 0, 0, 0.06),
            rgba(0, 255, 0, 0.02),
            rgba(0, 0, 255, 0.06)
    );
    background-size: 100% 3px, 4px 100%;
}
/* Class to apply a themed svg */
.themed-svg {
    /* TODO define a default image-url */
    /* Use the SVG as a mask */
    background-color: var(--primary-color);
    -webkit-mask-image: var(--image-url);
    mask-image: var(--image-url);

    -webkit-mask-size: contain;
    mask-size: contain;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-position: center;
    mask-position: center;
}
.themed-svg[data-icon="attack"] { --image-url: url('../img/svg/attack.svg'); }
.themed-svg[data-icon="bigGuns"] { --image-url: url('../img/svg/bigGuns.svg'); }
.themed-svg[data-icon="caps"] { --image-url: url('../img/svg/caps.svg'); }
.themed-svg[data-icon="drinks"] { --image-url: url('../img/svg/drinks.svg'); }
.themed-svg[data-icon="energyWeapons"] { --image-url: url('../img/svg/energyWeapons.svg'); }
.themed-svg[data-icon="explosives"] { --image-url: url('../img/svg/explosives.svg'); }
.themed-svg[data-icon="food"] { --image-url: url('../img/svg/food.svg'); }
.themed-svg[data-icon="gear"] { --image-url: url('../img/svg/gear.svg'); }
.themed-svg[data-icon="drinks"] { --image-url: url('../img/svg/drinks.svg'); }
.themed-svg[data-icon="hp"] { --image-url: url('../img/svg/hp.svg'); }
.themed-svg[data-icon="luck"] { --image-url: url('../img/svg/luck.svg'); }
.themed-svg[data-icon="meds"] { --image-url: url('../img/svg/meds.svg'); }
.themed-svg[data-icon="meleeWeapons"] { --image-url: url('../img/svg/meleeWeapons.svg'); }
.themed-svg[data-icon="smallGuns"] { --image-url: url('../img/svg/smallGuns.svg'); }
.themed-svg[data-icon="throwing"] { --image-url: url('../img/svg/throwing.svg'); }
.themed-svg[data-icon="unarmed"] { --image-url: url('../img/svg/unarmed.svg'); }
.themed-svg[data-icon="vaultboy"] { --image-url: url('../img/svg/vaultboy.svg'); }
.themed-svg[data-icon="weight"] { --image-url: url('../img/svg/weight.svg'); }


/****************************
 *   TODO Focus and Hover   *
 ****************************/

@media (hover: hover) {
    .button-attack:hover { opacity: 0.8; }
    .tab-button:hover { background-color: var(--tab-hover); }
    .button:hover, .popup__button-confirm:hover { background-color: var(--button-hover); }
    .popup__button-x:hover { color: var(--primary-color); }
}
/* TODO vedere che fare con i focus
    GENERICO PER (QUASI) TUTTI I BOTTONI */
/* button:focus { color: var(--primary-color); }*/
select:focus {
    outline: none;
    box-shadow: 0 0 5px var(--primary-color-translucent);
}
.form-control:focus {
    outline: none;
    box-shadow: 0 0 5px var(--primary-color-translucent);
    border-color: var(--primary-color);
}



/*********************
 *   Tooltip Panel   *
 *********************/
.tooltip-panel {
    position: fixed; /* Use fixed positioning to place relative to viewport */
    background-color: var(--secondary-color);
    color: var(--primary-color);
    border: var(--border-primary-thin);
    padding: 0.75rem;
    border-radius: 3px;
    z-index: 10000; /* Higher than the scanlines */

    /* Sizing and appearance */
    max-width: 250px;
    font-size: 0.9rem;
    line-height: 1.4;
    text-align: center;

    /* Visibility & Animation */
    opacity: 0;
    pointer-events: none; /* Prevents tooltip from blocking mouse events */
    transform: scale(0.95);
    transition: opacity 0.2s ease, transform 0.2s ease;
}
.tooltip-panel.visible {
    opacity: 1;
    transform: scale(1);
    pointer-events: auto; /* Allow interaction if needed */
}
/* The little arrow pointing to the element */
.tooltip-arrow {
    position: absolute;
    width: 0;
    height: 0;
    border-style: solid;
    transform: translateX(-50%); /* center arrow */
    left: 50%; /* In the middle of the container */
}
/* Position arrow on the bottom */
.tooltip-panel.pos-top .tooltip-arrow {
    bottom: -8px; /* Half the arrow height */
    border-width: 8px 8px 0 8px; /* Creates an upward-pointing triangle */
    border-color: var(--primary-color) transparent transparent transparent;
}
/* Position arrow on the top */
.tooltip-panel.pos-bottom .tooltip-arrow {
    top: -8px; /* Half the arrow height */
    border-width: 0 8px 8px 8px; /* Creates a downward-pointing triangle */
    border-color: transparent transparent var(--primary-color) transparent;
}

/*****************
 *     POPUPS    *
 *****************/
dialog {
    color: var(--primary-color);
    background-color: var(--secondary-color);
    border: var(--border-primary-thin);

    max-width: calc(320px - 2rem);
    max-height: calc(100vh - 2rem);

    gap: .5rem;
    flex-direction: column;

    text-align: center;
}
dialog[open] {
    overflow: visible;
    display: flex;
    animation: crt-turn-on .7s forwards;
    pointer-events: auto;
}
.dialog-closing { animation: crt-turn-off .3s forwards !important; }
dialog::backdrop {
    background-color: var(--overlay-color);
    backdrop-filter: blur(3px);
}
.popup__button-x {

    /* overwrite button */
    font-size: 2rem;
    background: none;
    border: none;
    padding: 0;

    align-self: start;
}










.buttons-section {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.5rem;
    margin-top: 0.5rem;
}
