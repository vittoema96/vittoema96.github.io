/* ==========================================================================
      Root Variables
   ========================================================================== */

:root {
    --loader-display: flex;

    /* Should not change, regardless of theme */
    --success-color: #0088ff;
    --failure-color: #dc143c;
    --overlay-color: rgba(0, 0, 0, 0.5);
    --delete-button-color: #ff4d4d;
    --special-text-color: #ffdb58;

    /* Control loader durations */
    --turn-on-delay: 0.1s;
    --turn-on-duration: 1s;
    --typewrite-duration: 1s; /* n% is dedicated to show the '> ' *% */
}

/*************************
 *    VANILLA ELEMENTS   *
 *************************/

html {
    height: 100%;
    overflow: hidden;
}
body {
    margin: 0;
    height: 100dvh;
    display: flex;
    flex-direction: column;
    color: var(--primary-color);
    background-color: var(--secondary-color);
    font-family: 'Share Tech Mono', 'Roboto Mono', 'Courier New', monospace;
    text-shadow:
        0 0 5px var(--animation-glow-color),
        0 0 10px var(--animation-glow-color);
}
header {
    text-align: center; /* text centered in block */
    align-items: center; /* block centered in his space */
    display: flex; /* elements stack horizontally */
}
hr {
    border: none;
    border-top: var(--border-primary-thick);
    width: 100%;
}
footer {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-evenly;
}
section {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.h1,
.h2,
.h3,
.h4,
.h5 {
    text-align: center;
}

.h1 {
    font-size: 2rem;
}
.h1--margin-top {
    margin-top: 1rem;
}
.h2 {
    font-size: 1.5rem;
}
.h3 {
    font-size: 1.3rem;
}
.h4 {
    font-size: 1rem;
}
.h5 {
    font-size: 0.7rem;
}

input,
textarea,
select,
button {
    font-family: inherit;
    text-shadow: inherit;
    background-color: var(--button-background);
    cursor: pointer;
    color: var(--primary-color);
    border: var(--border-primary-thin);
    border-radius: 5px;
}
textarea::placeholder,
input[type='text']::placeholder {
    color: var(--primary-color-very-translucent);
}
input[type='number'] {
    -moz-appearance: textfield;
    font-size: 1rem;
    text-align: center;
    padding: 0.3rem;
}
input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
    opacity: 1;
    -webkit-appearance: none;
}
input[type='checkbox'] {
    appearance: none;
    width: 1.5rem;
    height: 1.5rem;
    border: 0;
    background-color: var(--button-background);

    /* TODO check default */
    background-size: contain;
    background-repeat: no-repeat;
}
input[type='checkbox']:checked {
    background-color: var(--primary-color);
}

button {
    padding: 0.8rem;
    font-size: 0.8rem;
    text-align: center;
    font-weight: bold;
    transition:
        color 0.3s ease,
        background-color 0.3s ease,
        font-size 0.3s ease,
        font-weight 0.3s ease;
}
button:disabled {
    opacity: 0.5;
}

select,
input[type='text'] {
    padding: 0.5rem;
    width: 80%;
}

/**********************
 *   Generic classes  *
 **********************/

.hidden {
    display: none !important; /* override any other 'display' */
}
.row {
    display: flex;
    align-items: center;
    flex-flow: row;
    gap: 0.5rem;
}
.row--spaced {
    justify-content: space-evenly;
}
.row--wrap {
    flex-wrap: wrap;
}
/* All items take the same space */
.l-distributed > * {
    flex: 1;
}
.l-spaceAround {
    justify-content: space-around;
}
/* Squished the items to the center */
.l-centered {
    justify-content: center;
}
.l-spaceBetween {
    justify-content: space-between;
}
/* Can be used either alone or in conjunction with l-distributed */
.l-lastSmall > :not(:last-child) {
    flex: 2;
}
.l-firstSmall > :not(:first-child) {
    flex: 2;
}

/**********************
 *     Main Header    *
 **********************/
#c-headerStats > :not(:last-child) {
    border-bottom: var(--border-primary-thick);
}

.icon-text-pair {
    padding: 2px;
    display: flex;
}
.icon-text-pair .themed-svg {
    width: 15px;
    height: 15px;
}
.icon-text-pair :not(.themed-svg) {
    flex: 1;
    text-align: center;
    padding: 0 8px;
}

/*********************
 *   Main Container  *
 *********************/
#main-container {
    width: 100%;
    overflow-y: auto;
    margin: 0 auto;
    padding: 1rem;
    border: 4px solid var(--primary-color);
    border-radius: 10px;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    align-items: stretch;
    box-sizing: border-box;
}

/**************
 *   Tabs   *
 **************/
.navigator {
    display: flex;
    padding: 0.5rem 1rem 0;
    justify-content: space-between;
    align-items: center;
    flex-direction: row;
    flex-wrap: nowrap;
    gap: 0.5rem;
}
.tabContent {
    gap: 1rem;
}

.tab-button {
    border-bottom: 0;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    padding: 0.2rem 0.3rem;
    min-width: 2.5rem;

    flex: 1;
    box-sizing: border-box;
}
.tab-button.active {
    background-color: var(--primary-color);
    color: var(--secondary-color);
}
.mini-tab-button {
    min-width: 10px;
    flex: 0 0 auto;
    display: flex;
    justify-content: center;
    align-items: center;
}

.subTab-button {
    /* Override button behaviour */
    color: var(--primary-color-very-translucent);
    background-color: transparent;
    border: none;
    border-radius: 0;
    font-size: 0.7rem;
    padding: 0.25rem 0;

    font-weight: normal;
    box-sizing: border-box;
}
.subTab-button.active + .subTab-button,
.subTab-button:has(+ .subTab-button.active) {
    color: var(--primary-color-translucent);
    font-size: 0.8rem;
}
.subTab-button.active {
    font-size: 1rem;
    font-weight: bolder;
    color: var(--primary-color);
    border-top: var(--border-primary-thick);
    border-bottom: var(--border-primary-thick);
}

/*****************
 *  STAT SCREEN  *
 *****************/

#c-special {
    container-type: inline-size;
    container-name: container-special;
    display: flex;
    flex-wrap: wrap;

    justify-content: space-around;
    /*justify-content: space-between;
    place-items: center;*/
    gap: 0.5rem;
}
/************************
 *  SPECIFIC TO MOBILE  *
 ************************/
@media (min-width: 768px) {
    #c-special {
        flex-wrap: nowrap;
    }
    .special {
        flex-basis: 0;
    }
    .special__name {
        font-size: calc(100cqw / (18 * 0.5)) !important; /* 100% width - 12 letters of size .5em */
    }
}

.special::before,
.sub-special::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;

    /* Use the SVG as a mask */
    background-color: var(--primary-color);
    -webkit-mask-image: url('/img/svg/gear.svg');
    mask-image: url('/img/svg/gear.svg');
    -webkit-mask-size: contain;
    mask-size: contain;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
}

.special,
.sub-special {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    aspect-ratio: 1;
}
.special {
    position: relative;
    flex-basis: calc(25% - 0.5rem);
    container-type: inline-size;

    min-width: 60px;
}
.special__name {
    margin-top: 12cqw;
    font-size: calc(100cqw / (14 * 0.5)); /* 100% width - 14 letters of size .5em */
    color: var(--special-text-color);
}
.special__value {
    font-size: 24cqw;
}
#c-special .sub-special {
    --image-url: url('/img/svg/gear-full.svg');
    background-color: var(--secondary-color);

    width: 50%;
    min-width: 30px;

    position: absolute;
    bottom: -5px;
    right: -10px;
}

.derived-stat {
    border: var(--border-primary-thick); /* FIXME use class */
    display: flex;
    flex-direction: column;
    border-radius: 5px;
    flex: 1;
    align-self: stretch;
    text-align: center;
    font-size: clamp(10px, 3vw, 32px);
}
.derived-stat > * {
    padding: 0.5rem;
    align-content: center;
}
.derived-stat > :first-child {
    flex: 1;
    background-color: var(--button-background);
    border-bottom: var(--border-primary-thin);
}

.skill {
    display: flex;
    align-items: center;
    padding: 0.5rem 1rem;
    border: var(--border-primary-thick); /* FIXME use class */
    border-radius: 5px;
    font-size: 0.7rem;
}
.skill > :not(:first-child) {
    text-align: center;
}
.skill > :nth-child(1),
.skill > :nth-child(2) {
    flex: 3;
}
.skill > :nth-child(3) {
    flex: 1;
}

/***************
 *  INV SCREEN *
 ***************/
.itemlist {
    gap: 0.2rem;
}
.itemlist-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
}
.button-add-item {
    font-size: 2rem;
    font-weight: bolder;
    padding: 0 0.5rem;
}
.button-card {
    background-color: var(--primary-color);
    border: none;
    height: 2.5rem !important;
    width: 2.5rem !important;
}

.activeApparel {
    position: relative;
    width: 100%;
    max-width: 380px;
    aspect-ratio: 1 / 1;
    min-height: 350px;
    max-height: 500px;
    margin-top: 1rem;
    margin-bottom: 1rem;
    margin-left: auto;
    margin-right: auto;
}

/* Equipped Apparel Display */
.equipped-apparel {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    margin: 0.75rem 0;
    background: linear-gradient(135deg, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.2) 100%);
    border-left: 3px solid var(--primary-color);
    border-right: 1px solid var(--primary-color);
    border-top: 1px solid var(--primary-color);
    border-bottom: 1px solid var(--primary-color);
    position: relative;
    user-select: none;
}

.equipped-apparel::after {
    content: 'â–¸ EQUIPPED ARMOR';
    position: absolute;
    top: -0.6rem;
    left: 1rem;
    background-color: var(--button-background);
    padding: 0 0.5rem;
    color: var(--primary-color);
    font-size: 0.7rem;
    font-weight: bold;
    letter-spacing: 0.15em;
}

.equipped-apparel h2 {
    display: none;
}

.equipped-apparel__grid {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    font-size: 0.8rem;
}

.equipped-apparel__slot {
    display: inline-flex;
    align-items: flex-start;
    gap: 0.4rem;
    padding: 0.3rem 0.6rem;
    background-color: rgba(0, 0, 0, 0.3);
    border: 1px solid var(--primary-color);
    border-radius: 2px;
    transition: all 0.15s ease;
    position: relative;
    user-select: none;
    cursor: default;
    pointer-events: none;
    max-width: 200px;
}

.equipped-apparel__slot:hover {
    background-color: rgba(0, 0, 0, 0.5);
    border-color: var(--secondary-color);
}

.equipped-apparel__slot:focus,
.equipped-apparel__slot:active {
    outline: none;
    border: 1px solid var(--primary-color);
}

.equipped-apparel__slot-label {
    font-weight: bold;
    font-size: 0.7rem;
    color: var(--primary-color);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    opacity: 0.8;
    flex-shrink: 0;
    max-width: 4rem;
    line-height: 1.1;
}

.equipped-apparel__slot-label::after {
    content: ':';
    margin-left: 0.1rem;
}

.equipped-apparel__slot-items {
    display: flex;
    flex-direction: column;
    gap: 0.15rem;
    font-size: 0.75rem;
}

.equipped-apparel__item {
    color: var(--primary-color);
    display: flex;
    align-items: flex-start;
    gap: 0.3rem;
}

.equipped-apparel__item::before {
    content: 'â€¢';
    color: var(--primary-color);
    flex-shrink: 0;
}

.equipped-apparel__item:only-child::before {
    content: '';
}

.equipped-apparel__empty {
    color: var(--primary-color);
    opacity: 0.4;
    font-style: italic;
    font-size: 0.7rem;
}

.apparel-stat {
    position: absolute;
    z-index: 1;
}
.apparel-stat.head,
.apparel-stat.torso {
    left: 50%;
    transform: translate(-50%, -50%);
}
.apparel-stat.head {
    top: 3rem;
}
.apparel-stat.leftArm,
.apparel-stat.rightArm {
    top: 8rem;
}
.apparel-stat.leftLeg,
.apparel-stat.rightLeg {
    top: 20rem;
}
.apparel-stat.leftArm {
    transform: translateY(-50%);
}
.apparel-stat.rightArm {
    left: 100%;
    transform: translate(-100%, -50%);
}
.apparel-stat.torso {
    top: 15rem;
}
.apparel-stat.leftLeg {
    transform: translateY(-50%);
    left: 5%;
}
.apparel-stat.rightLeg {
    left: 95%;
    transform: translate(-100%, -50%);
}
.apparel-stat div {
    text-align: center;
    background-color: var(--secondary-color);
    border: 1px solid var(--primary-color);
    padding: 5px;
    width: 70px;
    font-size: 0.6rem;
    font-weight: bold;
}
.apparel-stat div:first-child {
    background-color: var(--primary-color);
    color: var(--secondary-color);
    font-size: 0.8rem;
}

.apparel-vaultboy {
    position: absolute;
    width: 80%;
    height: 80%;
    top: calc(50% + 3rem);
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 0;
}

/**********************
 *  CARD DEFINITIONS  *
 **********************/

.card-carousel {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scroll-padding: 0 7.5%;
    -ms-overflow-style: none;
    scrollbar-width: none;
}
.card-carousel::-webkit-scrollbar {
    display: none;
}
.card-carousel::before,
.card-carousel::after {
    content: '';
    flex: 0 0 0.5rem;
}
.card-carousel > .card {
    scroll-snap-align: center;
    flex: 0 0 85%;
}
.card {
    width: 100%;
    max-width: 300px;
    border: var(--border-primary-thick);
    box-shadow: 5px 5px 10px var(--overlay-color);
    position: relative;
}
.card-header {
    padding: 10px;
    align-items: start;
    background-color: var(--primary-color);
    color: var(--secondary-color);
    text-align: center;
}

.card-quantity {
    font-size: 0.8rem;
}
.card__header-stats {
    display: flex;
    flex-direction: column;
    font-size: 0.6rem;
}
.card-controls {
    margin: 5px;
    justify-content: space-around;
    align-items: center;
    display: flex;
}
.description-toggle-button {
    padding: 0.5rem;
    flex: auto;
}
.description-container {
    overflow: hidden;
    max-height: 0;
    transition: max-height 0.3s ease-out;
}
.description-container.expanded {
    max-height: 500px;
    transition: max-height 0.5s ease-in;
}
.description {
    padding: 10px;
    text-align: justify;
    font-size: 0.8rem;
    line-height: 1.5;
}
/*** Card Overlay ***/
.card-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--overlay-color);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 10;
    gap: 1rem;
}
.card-overlay button {
    padding: 0.75rem 1rem;
    font-size: 1.5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    min-width: 60px;
    min-height: 60px;
    border-radius: 5px;
    border: var(--border-primary-thin);
}
.card-overlay button img {
    width: 1.5rem;
    height: 1.5rem;
}

/* Card Description Overlay */
.card-description-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--overlay-color);
    backdrop-filter: blur(2px);
    display: flex;
    flex-direction: column;
    z-index: 15;
    padding: 1rem;
    overflow-y: auto;
}

.card-description-overlay__content {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    height: 100%;
}

.card-description-overlay__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-bottom: 0.5rem;
    border-bottom: var(--border-primary-thin);
}

.card-description-overlay__header h3 {
    color: var(--primary-color);
    font-size: 1rem;
    margin: 0;
}

.card-description-overlay__close {
    background: none;
    border: none;
    color: var(--primary-color);
    font-size: 1.2rem;
    cursor: pointer;
    padding: 0.25rem;
    display: flex;
    align-items: center;
    justify-content: center;
}

.card-description-overlay__close:hover {
    color: var(--failure-color);
}

.card-description-overlay__text {
    flex: 1;
    overflow-y: auto;
    color: var(--primary-color);
    font-size: 0.85rem;
    line-height: 1.6;
}

.card-description-overlay__text p {
    margin: 0;
    white-space: pre-wrap;
}

.delete-button {
    background-color: var(--delete-button-color);
} /* TODO same background as others? maybe use red for the icon */

/***************
 *  Ammo Cards *
 ***************/
#ammo-cards {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    font-size: 0.8rem;
}
/* Ammo rows now use inventory-row styles */

/**************
 *   Buttons  *
 **************/
.popup__button-confirm {
    background-color: var(--primary-color);
    color: var(--secondary-color);
}
.popup__button-close {
    background-color: var(--cancel-btn-background); /* TODO use different color? */
    color: var(--primary-color);
}

/*************
 *    Dice   *
 *************/

.dice {
    color: var(--primary-color);
    background-color: var(--button-background);
    transition: background-color 0.3s ease;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1.5rem;
    aspect-ratio: 1 / 1;
}
.d6-dice.active,
.d20-dice.active {
    background-color: var(--primary-color);
    color: var(--secondary-color);
}
.d20-dice {
    min-width: 3rem;
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    position: relative;
}
.d20-dice:not(:nth-child(-n + 2)) {
    transform: scale(0.8);
} /* All except first 2 */

/* Crit/fail dice always have colored background */
/* Deselected: less saturated (30% opacity) */
.d20-dice.roll-crit {
    background-color: rgba(0, 136, 255, 0.3); /* Light blue background */
    filter: drop-shadow(0 0 2px var(--success-color));
}
.d20-dice.roll-complication {
    background-color: rgba(220, 20, 60, 0.3); /* Light red background */
    filter: drop-shadow(0 0 2px var(--failure-color));
}

/* Selected: more saturated (60% opacity) */
.d20-dice.active.roll-crit {
    background-color: rgba(0, 136, 255, 0.6); /* More saturated blue */
}
.d20-dice.active.roll-complication {
    background-color: rgba(220, 20, 60, 0.6); /* More saturated red */
}

.d6-dice {
    background-size: 80%;
    background-position: center;
    background-repeat: no-repeat;
    width: 2.5rem;
    height: 2.5rem;
    position: relative;
}

/* D6 dice faces - use ::before pseudo-element for the icon with mask */
.d6-face-damage1::before,
.d6-face-damage2::before,
.d6-face-effect::before {
    content: '';
    position: absolute;
    top: 10%;
    left: 10%;
    width: 80%;
    height: 80%;
    mask-size: contain;
    mask-position: center;
    mask-repeat: no-repeat;
    -webkit-mask-size: contain;
    -webkit-mask-position: center;
    -webkit-mask-repeat: no-repeat;
    background-color: var(--primary-color); /* Default: primary color */
}

.d6-face-damage1::before {
    mask-image: url('/img/svg/damage1.svg');
    -webkit-mask-image: url('/img/svg/damage1.svg');
}
.d6-face-damage2::before {
    mask-image: url('/img/svg/damage2.svg');
    -webkit-mask-image: url('/img/svg/damage2.svg');
}
.d6-face-effect::before {
    mask-image: url('/img/svg/vaultboy.svg');
    -webkit-mask-image: url('/img/svg/vaultboy.svg');
}

/* Selected state - secondary color */
.d6-dice.active.d6-face-damage1::before,
.d6-dice.active.d6-face-damage2::before,
.d6-dice.active.d6-face-effect::before {
    background-color: var(--secondary-color);
}

.d6-face-blank {
    background-image: none;
}

/*** Custom templates - common ***/
.stats {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
    font-size: 0.9em;
    margin: 0;
}
.card-stat div {
    text-align: center;
    border: 1px solid var(--primary-color);
    padding: 5px;
    width: 60px;
    font-size: 0.6rem;
    font-weight: bold;
}
.card-stat div:first-child {
    background-color: var(--primary-color);
    color: var(--secondary-color);
}

.card-weapon-image {
    margin: 10px;
    align-self: stretch;
    flex-grow: 1;
}
.card-aid-image {
    min-width: 2.5rem;
    min-height: 2.5rem;
    margin: 5px;
}

/****************************
 *  INVENTORY ACCORDION LIST *
 ****************************/

.inventory-list {
    display: flex;
    flex-direction: column;
    gap: 0;
    width: 100%;
}

/* Search and Sort Controls */
.inventory-list__controls {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding: 0.5rem;
    background-color: var(--secondary-color);
    border-bottom: var(--border-primary-thin);
    position: sticky;
    top: -1rem;
    z-index: 100;
}

.inventory-list__search {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem;
    background-color: var(--button-background);
    border: var(--border-primary-thin);
    border-radius: 3px;
}

.inventory-list__search i {
    color: var(--primary-color);
    font-size: 0.9rem;
}

.inventory-list__search-input {
    flex: 1;
    background: none;
    border: none;
    color: var(--primary-color);
    font-family: inherit;
    font-size: 0.9rem;
    outline: none;
}

.inventory-list__search-input::placeholder {
    color: var(--primary-color);
    opacity: 0.5;
}

.inventory-list__search-clear {
    background: none;
    border: none;
    color: var(--primary-color);
    cursor: pointer;
    padding: 0.25rem;
    font-size: 0.9rem;
}

.inventory-list__actions {
    display: flex;
    gap: 0.5rem;
    align-items: center;
    justify-content: space-between;
}

.inventory-list__sort {
    display: flex;
    gap: 0.5rem;
    flex: 1;
}

.inventory-list__sort-btn {
    flex: 1;
    padding: 0.5rem;
    background-color: var(--button-background);
    border: var(--border-primary-thin);
    color: var(--primary-color);
    cursor: pointer;
    transition: all 0.2s ease;
}

.inventory-list__sort-btn:hover {
    background-color: var(--primary-color);
    color: var(--secondary-color);
}

.inventory-list__sort-btn.active {
    background-color: var(--primary-color);
    color: var(--secondary-color);
}

.inventory-list__add-btn {
    padding: 0.5rem 1rem;
    background-color: var(--primary-color);
    border: var(--border-primary-thin);
    color: var(--secondary-color);
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    white-space: nowrap;
}

.inventory-list__add-btn:hover {
    background-color: var(--button-background);
    color: var(--primary-color);
}

.inventory-list__add-btn i {
    font-size: 0.9rem;
}

/* Type Filter Dropdown */
.inventory-list__filter-wrapper {
    position: relative;
}

.inventory-list__filter-dropdown {
    position: absolute;
    top: 100%;
    right: 0;
    margin-top: 0.25rem;
    background-color: var(--secondary-color);
    border: var(--border-primary-thin);
    border-radius: 3px;
    box-shadow: 5px 5px 10px var(--overlay-color);
    z-index: 200;
    min-width: 200px;
    max-height: 300px;
    overflow-y: auto;
}

.inventory-list__filter-dropdown button {
    display: block;
    width: 100%;
    padding: 0.5rem 0.75rem;
    background: none;
    border: none;
    color: var(--primary-color);
    text-align: left;
    cursor: pointer;
    font-family: inherit;
    font-size: 0.85rem;
    transition: background-color 0.2s ease;
}

.inventory-list__filter-dropdown button:hover {
    background-color: var(--button-background);
}

.inventory-list__filter-dropdown button.active {
    background-color: var(--primary-color);
    color: var(--secondary-color);
    font-weight: bold;
}

/* Items Container */
.inventory-list__items {
    display: flex;
    flex-direction: column;
}

.inventory-list__empty {
    padding: 2rem;
    text-align: center;
    color: var(--primary-color);
    opacity: 0.6;
    font-style: italic;
}

/* Group Headers */
.inventory-list__group-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem 1rem;
    background-color: var(--primary-color);
    color: var(--secondary-color);
    font-weight: bold;
    font-size: 0.9rem;
    border-bottom: var(--border-primary-thin);
    position: sticky;
    top: 4rem;
    z-index: 5;
}

.inventory-list__group-count {
    opacity: 0.7;
    font-size: 0.8rem;
}

/* Inventory Row */
.inventory-row {
    position: relative;
    border-bottom: var(--border-primary-thin);
    background-color: var(--secondary-color-translucent);
    transition: background-color 0.2s ease;
}

.inventory-row:hover {
    background-color: var(--button-background);
}

.inventory-row.expanded {
    background-color: var(--button-background);
}

/* Row Header (Compact View) */
.inventory-row__header {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem;
    cursor: pointer;
    user-select: none;
}

.inventory-row__icon {
    width: 2.5rem;
    height: 2.5rem;
    flex-shrink: 0;
}

.inventory-row__info {
    flex: 1;
    min-width: 0;
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
}

.inventory-row__name {
    font-weight: bold;
    font-size: 0.95rem;
    color: var(--primary-color);
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 0.5rem;
}

.inventory-row__name-text {
    flex: 1;
}

.inventory-row__name-text.text-md {
    font-size: 0.9rem;
}

.inventory-row__name-text.text-sm {
    font-size: 0.85rem;
}

.inventory-row__name-text.text-xs {
    font-size: 0.8rem;
}

.inventory-row__badges {
    flex-shrink: 0;
    display: flex;
    align-items: center;
    gap: 0.25rem;
}

.inventory-row__subinfo {
    font-size: 0.75rem;
    color: var(--primary-color);
    opacity: 0.7;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.inventory-row__quantity {
    font-size: 0.9rem;
    color: var(--primary-color);
    font-weight: bold;
    padding: 0.25rem 0.5rem;
    background-color: var(--secondary-color);
    border: var(--border-primary-thin);
    border-radius: 3px;
    flex-shrink: 0;
}

.inventory-row__expand {
    color: var(--primary-color);
    font-size: 0.9rem;
    flex-shrink: 0;
    transition: transform 0.3s ease;
}

.inventory-row.expanded .inventory-row__expand {
    transform: rotate(180deg);
}

/* Badges */
.inventory-row__badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-size: 0.65rem;
    padding: 0.15rem 0.4rem;
    border-radius: 3px;
    font-weight: bold;
    text-transform: uppercase;
}

.inventory-row__badge .themed-svg {
    width: 0.9rem;
    height: 0.9rem;
    padding: 0;
}

.badge-success {
    background-color: transparent;
    color: var(--primary-color);
    padding: 0.1rem 0.25rem;
}

.badge-warning {
    background-color: #ffa500;
    color: white;
}

.badge-danger {
    background-color: var(--failure-color);
    color: white;
}

/* Expandable Content */
.inventory-row__content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-in-out;
}

.inventory-row__card {
    padding: 1rem;
    background-color: var(--button-background);
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Make cards fit nicely in accordion */
.inventory-row__card .card {
    margin: 0;
    border: var(--border-primary-thin);
    background-color: var(--secondary-color);
    box-shadow: 5px 5px 10px var(--overlay-color);
}

/***********
 *  OTHER  *
 ***********/

.tags-container {
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
    gap: 0.5rem;
}
.tag {
    background-color: var(--primary-color);
    color: var(--secondary-color);
    border-radius: 4px;
    padding: 0.3rem;
    font-size: 0.8rem;
}
.tag-empty {
    background-color: var(--button-background) !important;
    color: var(--primary-color) !important;
    border: var(--border-primary-thin) !important;
}

/****************
 *  MAP SCREEN  *
 ****************/

section#map-tabContent {
    overflow: hidden;
    flex-flow: column;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
    box-sizing: border-box;
}

section#map-tabContent:not(.hidden) {
    display: flex;
}

#map-container {
    height: 100%;
    width: 100%;
}

/*********************
 *  LOADING OVERLAY  *
 *********************/
#loader {
    display: var(--loader-display); /* Used to 'toggle' the loader animation for debugging */
    position: fixed;
    inset: 0;
    background: var(--secondary-color);
    z-index: 9998; /* One below body::before */
    align-items: center;
    justify-content: center;
    transition: opacity 0.75s ease-out;

    animation: fadeOut 0.5s forwards;
    animation-delay: calc(
        var(--turn-on-delay) + var(--turn-on-duration) + 4 * var(--typewrite-duration)
    );
    font-size: calc(min(2.5vw, 2vh));
}
#loader pre {
    font-family: 'Fira Code', monospace; /* To make loader render properly on (my) Android */
    margin: 0; /* No margin, pre presents stuff as is. Use margin on pre children (like spans in loader) */
    white-space: pre-wrap; /* TODO do we need this (or is there a better alternative)? Test it and check other values) */
}
/* Loader entries */
#loader span {
    opacity: 0;
    display: block;
    overflow: hidden;
    margin: 1rem;
}
/* PIP-BOY 3000 text */
#loader .turn-on-animation {
    transform-origin: center;
    animation: crt-turn-on var(--turn-on-duration) forwards;
    animation-delay: var(--turn-on-delay);
    align-self: center;
    margin: 2rem 0;
}
/* Code entries */
#loader .boot-text {
    white-space: nowrap;
    animation: typewriter var(--typewrite-duration) steps(40, end) forwards;
    animation-delay: calc(
        var(--turn-on-delay) + var(--turn-on-duration) + var(--line-idx) * var(--typewrite-duration)
    );
}
#loader .boot-text:nth-child(2) {
    --line-idx: 0;
}
#loader .boot-text:nth-child(3) {
    --line-idx: 1;
}
#loader .boot-text:nth-child(4) {
    --line-idx: 2;
}
#loader .boot-text:nth-child(5) {
    --line-idx: 3;
}

/****************
 *  ANIMATIONS  *
 ****************/

@keyframes crt-turn-on {
    0% {
        transform: scale(1.5, 0.005);
        filter: brightness(6);
        opacity: 0;
    }
    20% {
        transform: scale(1, 0.005);
        filter: brightness(4.2);
        opacity: 1;
    }
    40% {
        transform: scale(1, 1);
        filter: brightness(2.8);
    }
    60% {
        filter: brightness(1.8);
    }
    80% {
        filter: brightness(1.2);
    }
    100% {
        transform: scale(1, 1);
        filter: brightness(1);
        opacity: 1;
    }
}
@keyframes crt-turn-off {
    0% {
        transform: scale(1, 1);
        filter: brightness(1);
        opacity: 1;
    }
    20% {
        filter: brightness(1.2);
    }
    40% {
        filter: brightness(1.8);
    }
    60% {
        transform: scale(1, 1);
        filter: brightness(2.8);
    }
    80% {
        transform: scale(1, 0.005);
        filter: brightness(4.2);
        opacity: 1;
    }
    100% {
        transform: scale(1.5, 0.005);
        filter: brightness(6);
        opacity: 0;
    }
}

/* Animation to make the scan lines flicker */
@keyframes flicker {
    0% {
        opacity: 0.27861;
    }
    5% {
        opacity: 0.34769;
    }
    10% {
        opacity: 0.23604;
    }
    15% {
        opacity: 0.90626;
    }
    20% {
        opacity: 0.18128;
    }
    25% {
        opacity: 0.83891;
    }
    30% {
        opacity: 0.65583;
    }
    35% {
        opacity: 0.67807;
    }
    40% {
        opacity: 0.26559;
    }
    45% {
        opacity: 0.84693;
    }
    50% {
        opacity: 0.96019;
    }
    55% {
        opacity: 0.08594;
    }
    60% {
        opacity: 0.20313;
    }
    65% {
        opacity: 0.71988;
    }
    70% {
        opacity: 0.53455;
    }
    75% {
        opacity: 0.37288;
    }
    80% {
        opacity: 0.71428;
    }
    85% {
        opacity: 0.70428;
    }
    90% {
        opacity: 0.7003;
    }
    95% {
        opacity: 0.36108;
    }
    100% {
        opacity: 0.24387;
    }
}

/* Fade out to opacity:0 and visibility:hidden (which forwards clicks) */
@keyframes fadeOut {
    to {
        opacity: 0;
        visibility: hidden;
    }
}

/* Grows element width so it looks like strings are typed in */
@keyframes typewriter {
    0% {
        width: 1ch;
        opacity: 1;
    }
    50% {
        width: 1ch;
        opacity: 1;
    }
    100% {
        width: 100%;
        opacity: 1;
    }
}



/***************
 *    THEMES   *
 ***************/

/* FALLOUT 3 THEME */
body.theme-fallout-3 {
    --primary-color: #afff03;
    --secondary-color: #0f3003;
    --button-background: #1a5205;

    --tab-hover: #338006;
    --button-hover: #7cba02;
    --cancel-btn-background: #4a5568;

    --animation-glow-color: rgba(45, 255, 113, 0.75);
}
/* FALLOUT New Vegas Theme */
body.theme-fallout-new-vegas {
    --primary-color: #ffbe0b;
    --secondary-color: #2a1d00;
    --button-background: #4d3d1a;

    --tab-hover: #785d21;
    --button-hover: #ffd466;
    --cancel-btn-background: #615849;
    --animation-glow-color: rgba(255, 190, 11, 0.7);
}
/* Just body's derived variables, body attributes are set below */
body {
    --primary-color-translucent: rgba(from var(--primary-color) r g b / 0.7);
    --primary-color-very-translucent: rgba(from var(--primary-color) r g b / 0.25);
    --secondary-color-translucent: rgba(from var(--secondary-color) r g b / 0.25);

    --border-primary-thick: 2px solid var(--primary-color);
    --border-primary-thin: 1px solid var(--primary-color);
    --border-secondary-thick: 2px solid var(--secondary-color);
    --border-secondary-thin: 1px solid var(--secondary-color);
}
/* Applies the scan lines on top of the whole body */
body::before {
    content: ' ';
    display: block; /* Necessary to make the ::before exist and behave like a block */
    position: fixed; /* Use fixed to cover the viewport */
    inset: 0; /* same as top/left/etc: 0; */

    z-index: 9999; /* It's the topmost element */
    pointer-events: none; /* Allows clicks to go through to elements underneath */
    animation: flicker 0.15s infinite; /* Makes the scan lines flicker */

    /* Actual scan line effect */
    background:
        linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 50%),
        linear-gradient(90deg, rgba(255, 0, 0, 0.06), rgba(0, 255, 0, 0.02), rgba(0, 0, 255, 0.06));
    background-size:
        100% 3px,
        4px 100%;
}
/* Class to apply a themed svg */
.themed-svg {
    /* TODO define a default image-url */
    /* Use the SVG as a mask */
    background-color: var(--primary-color);
    -webkit-mask-image: var(--image-url);
    mask-image: var(--image-url);

    -webkit-mask-size: contain;
    mask-size: contain;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-position: center;
    mask-position: center;
}
.themed-svg[data-icon='attack'] {
    --image-url: url('/img/svg/attack.svg');
}
.themed-svg[data-icon='bigGuns'] {
    --image-url: url('/img/svg/bigGuns.svg');
}
.themed-svg[data-icon='caps'] {
    --image-url: url('/img/svg/caps.svg');
}
.themed-svg[data-icon='drinks'] {
    --image-url: url('/img/svg/drinks.svg');
}
.themed-svg[data-icon='energyWeapons'] {
    --image-url: url('/img/svg/energyWeapons.svg');
}
.themed-svg[data-icon='explosives'] {
    --image-url: url('/img/svg/explosives.svg');
}
.themed-svg[data-icon='food'] {
    --image-url: url('/img/svg/food.svg');
}
.themed-svg[data-icon='gear'] {
    --image-url: url('/img/svg/gear.svg');
}
.themed-svg[data-icon='drinks'] {
    --image-url: url('/img/svg/drinks.svg');
}
.themed-svg[data-icon='hp'] {
    --image-url: url('/img/svg/hp.svg');
}
.themed-svg[data-icon='luck'] {
    --image-url: url('/img/svg/luck.svg');
}
.themed-svg[data-icon='meds'] {
    --image-url: url('/img/svg/meds.svg');
}
.themed-svg[data-icon='meleeWeapons'] {
    --image-url: url('/img/svg/meleeWeapons.svg');
}
.themed-svg[data-icon='smallGuns'] {
    --image-url: url('/img/svg/smallGuns.svg');
}
.themed-svg[data-icon='throwing'] {
    --image-url: url('/img/svg/throwing.svg');
}
.themed-svg[data-icon='unarmed'] {
    --image-url: url('/img/svg/unarmed.svg');
}
.themed-svg[data-icon='vaultboy'] {
    --image-url: url('/img/svg/vaultboy.svg');
}
.themed-svg[data-icon='vaultboy-open-arms'] {
    --image-url: url('/img/svg/vaultboy-open-arms.svg');
}
.themed-svg[data-icon='mrHandy'] {
    --image-url: url('/img/svg/mrHandy.svg');
}
.themed-svg[data-icon='ghoul'] {
    --image-url: url('/img/svg/ghoul.svg');
}
.themed-svg[data-icon='weight'] {
    --image-url: url('/img/svg/weight.svg');
}
.themed-svg[data-icon='armor'] {
    --image-url: url('/img/svg/armor.svg');
}

/****************************
 *   TODO Focus and Hover   *
 ****************************/

@media (hover: hover) {
    .button-card:hover {
        opacity: 0.8;
    }
    .tab-button:hover {
        background-color: var(--tab-hover);
    }
    .button:hover,
    .popup__button-confirm:hover {
        background-color: var(--button-hover);
    }
    .popup__button-x:hover {
        color: var(--primary-color);
    }
}
/* TODO vedere che fare con i focus
    GENERICO PER (QUASI) TUTTI I BOTTONI */
/* button:focus { color: var(--primary-color); }*/
select:focus {
    outline: none;
    box-shadow: 0 0 5px var(--primary-color-translucent);
}
.form-control:focus {
    outline: none;
    box-shadow: 0 0 5px var(--primary-color-translucent);
    border-color: var(--primary-color);
}

/*********************
 *   Tooltip Panel   *
 *********************/
.tooltip-panel {
    position: fixed; /* Use fixed positioning to place relative to viewport */
    background-color: var(--secondary-color);
    color: var(--primary-color);
    border: var(--border-primary-thin);
    padding: 0.75rem;
    z-index: 10000; /* Ensure tooltip is above everything including dialogs */
    border-radius: 3px;
    z-index: 10000; /* Higher than the scanlines */

    /* Sizing and appearance */
    max-width: 250px;
    font-size: 0.9rem;
    line-height: 1.4;
    text-align: center;

    /* Visibility & Animation */
    opacity: 0;
    pointer-events: none; /* Prevents tooltip from blocking mouse events */
    transform: scale(0.95);
    transition:
        opacity 0.2s ease,
        transform 0.2s ease;
}
.tooltip-panel.visible {
    opacity: 1;
    transform: scale(1);
    pointer-events: auto; /* Allow interaction if needed */
}
/* The little arrow pointing to the element */
.tooltip-arrow {
    position: absolute;
    width: 0;
    height: 0;
    border-style: solid;
    transform: translateX(-50%); /* center arrow */
    left: 50%; /* In the middle of the container */
}
/* Position arrow on the bottom */
.tooltip-panel.pos-top .tooltip-arrow {
    bottom: -8px; /* Half the arrow height */
    border-width: 8px 8px 0 8px; /* Creates an upward-pointing triangle */
    border-color: var(--primary-color) transparent transparent transparent;
}
/* Position arrow on the top */
.tooltip-panel.pos-bottom .tooltip-arrow {
    top: -8px; /* Half the arrow height */
    border-width: 0 8px 8px 8px; /* Creates a downward-pointing triangle */
    border-color: transparent transparent var(--primary-color) transparent;
}

/*****************
 *     POPUPS    *
 *****************/
dialog {
    color: var(--primary-color);
    background-color: var(--secondary-color);
    border: var(--border-primary-thin);

    max-width: calc(320px - 2rem);
    max-height: calc(100vh - 2rem);

    gap: 0.5rem;
    flex-direction: column;

    text-align: center;
}
dialog[open] {
    overflow: visible;
    display: flex;
    animation: crt-turn-on 0.7s forwards;
    pointer-events: auto;
}
.dialog-closing {
    animation: crt-turn-off 0.3s forwards !important;
}
dialog::backdrop {
    background-color: var(--overlay-color);
    backdrop-filter: blur(3px);
}
.popup__button-x {
    /* overwrite button */
    font-size: 2rem;
    background: none;
    border: none;
    padding: 0;

    align-self: start;
}

/* Description Popup */
.description-popup {
    max-width: 500px;
    width: 90%;
}

.description-popup__text {
    padding: 1rem;
    line-height: 1.6;
    color: var(--primary-color);
    text-align: left;
}

.description-popup__text p {
    margin: 0;
    white-space: pre-wrap;
}

.buttons-section {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.5rem;
    margin-top: 0.5rem;
}

/*****************
 * MODIFY ITEM POPUP - Mobile-First Design
 *****************/

/* Modify Button in Card Controls */
.card-controls .modify-button {
    padding: 0.5rem 0.75rem;
    cursor: pointer;
    font-family: inherit;
    font-size: 0.85rem;
    min-width: 70px;
    max-width: 80px;
    text-align: center;
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

/* Icon-only description button */
.description-toggle-button--icon {
    width: auto;
    padding: 0.5rem 0.75rem;
    min-width: 40px;
    max-width: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.description-toggle-button--icon i {
    font-size: 1rem;
}

/* Modify Item Popup Specific Overrides */
.modify-item-popup {
    gap: 0.3rem;
    padding: 0.6rem;
    max-height: calc(100vh - 1.5rem);
}

.modify-item-popup .popup__header {
    padding: 0;
    margin-bottom: 0.25rem;
}

.modify-item-popup .popup__header h2 {
    font-size: 1rem;
    margin: 0;
    line-height: 1.2;
}

.modify-item-popup .popup__content {
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: 0.4rem;
}

.modify-item-popup .popup__footer {
    padding: 0;
    margin-top: 0.25rem;
    gap: 0.5rem;
}

.modify-item-popup .popup__footer button {
    padding: 0.5rem 0.75rem;
    font-size: 0.85rem;
}

/* Compact Stats Bar */
.mod-stats-bar {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 0.35rem;
    padding: 0.5rem;
    background: rgba(0, 255, 0, 0.05);
    border: 1px solid rgba(0, 255, 0, 0.2);
    border-radius: 3px;
}

.mod-stat {
    display: flex;
    flex-direction: column;
    gap: 0.15rem;
    align-items: center;
    text-align: center;
}

.mod-stat-label {
    font-size: 0.65rem;
    opacity: 0.7;
    text-transform: uppercase;
    letter-spacing: 0.3px;
}

.mod-stat-value {
    font-size: 0.85rem;
    font-weight: bold;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.3rem;
}

.mod-stat-change {
    font-size: 0.75rem;
    color: var(--color-text-primary, #0f0);
    font-weight: normal;
}

/* Mod Slots Container */
.mod-slots-container {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

/* Two-column layout for many slots */
.mod-slots-two-columns {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0.4rem;
    column-gap: 0.5rem;
}

/* Mod Slot Row */
.mod-slot-row {
    display: flex;
    flex-direction: column;
    gap: 0.3rem;
    min-width: 0;
}

.mod-slot-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 24px;
    min-width: 0;
}

.mod-slot-label-group {
    display: flex;
    align-items: center;
    gap: 0.3rem;
    min-width: 0;
    flex: 1;
    overflow: hidden;
}

.mod-slot-header label {
    font-size: 0.8rem;
    font-weight: bold;
    margin: 0;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

/* Info Button */
.mod-info-button {
    background: none;
    border: none;
    padding: 0;
    margin: 0;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 16px;
    height: 16px;
    min-width: 16px;
    opacity: 0.7;
    transition: opacity 0.2s;
    flex-shrink: 0;
}

.mod-info-button:hover {
    opacity: 1;
}

.mod-info-icon {
    font-size: 0.85rem;
    color: var(--color-text-primary, #0f0);
    font-weight: bold;
    line-height: 1;
}

/* Cost badge container */
.mod-slot-cost-area {
    width: 70px;
    min-width: 70px;
    max-width: 70px;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    flex-shrink: 0;
    height: 24px;
}

.mod-slot-cost-badge {
    display: flex;
    align-items: center;
    gap: 0.3rem;
    padding: 0.15rem 0.35rem;
    background: rgba(0, 255, 0, 0.1);
    border: 1px solid rgba(0, 255, 0, 0.3);
    border-radius: 3px;
    height: 20px;
    white-space: nowrap;
}

.mod-slot-cost-badge input[type="checkbox"] {
    margin: 0;
    cursor: pointer;
    flex-shrink: 0;
}

.mod-cost-value {
    font-size: 0.7rem;
    font-weight: bold;
    color: var(--color-text-primary, #0f0);
    min-width: 20px;
    text-align: right;
}

.mod-slot-select {
    width: 100%;
    max-width: 100%;
    padding: 0.5rem;
    font-size: 0.9rem;
    min-height: 38px;
    cursor: pointer;
    box-sizing: border-box;
}

/* Total Cost Section */
.mod-total-section {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem;
    background: rgba(0, 255, 0, 0.1);
    border: 1px solid rgba(0, 255, 0, 0.3);
    border-radius: 3px;
    font-size: 0.95rem;
    font-weight: bold;
}

.mod-total-label {
    opacity: 0.9;
    font-size: 0.85rem;
}

.mod-total-value {
    display: flex;
    align-items: center;
    gap: 0.4rem;
    color: var(--color-text-primary, #0f0);
}

.mod-total-value .themed-svg {
    width: 1rem;
    height: 1rem;
}
